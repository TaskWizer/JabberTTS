[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jabbertts"
version = "0.1.0"
description = "The fastest, most feature-rich, easy to use, and efficient Text-to-Speech API with near-instant response times even on CPU-only systems."
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "JabberTTS Team", email = "contact@jabbertts.com" }
]
maintainers = [
    { name = "JabberTTS Team", email = "contact@jabbertts.com" }
]
keywords = [
    "text-to-speech",
    "tts",
    "speech-synthesis",
    "openai-compatible",
    "voice-cloning",
    "onnx",
    "cpu-optimization"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "onnxruntime>=1.16.0",
    "numpy>=1.24.0",
    "torch>=2.1.0",
    "torchaudio>=2.1.0",
    "transformers>=4.35.0",
    "phonemizer>=3.2.0",
    "ffmpeg-python>=0.2.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "psutil>=5.9.0",
    "aiofiles>=23.2.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "pydantic-settings>=2.10.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.3.0",
    "black>=23.9.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "pre-commit>=3.5.0",
    "locust>=2.17.0",
    "coverage>=7.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "httpx>=0.25.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/TaskWizer/JabberTTS"
Documentation = "https://github.com/TaskWizer/JabberTTS/tree/main/docs"
Repository = "https://github.com/TaskWizer/JabberTTS"
Issues = "https://github.com/TaskWizer/JabberTTS/issues"
Changelog = "https://github.com/TaskWizer/JabberTTS/blob/main/docs/CHANGELOG.md"

[project.scripts]
jabbertts = "jabbertts.main:main"

[tool.hatch.build.targets.wheel]
packages = ["jabbertts"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["jabbertts"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchaudio.*",
    "transformers.*",
    "onnxruntime.*",
    "librosa.*",
    "soundfile.*",
    "phonemizer.*",
    "ffmpeg.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=jabbertts",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["jabbertts"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
]

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=25.1.0",
    "coverage>=7.10.6",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "locust>=2.34.0",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.8.0",
]
